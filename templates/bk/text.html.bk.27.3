<!DOCTYPE html>
<html>
<head>
    <title>{{ filename }} - Ghost EW Performance Lab</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='style.css') }}">
</head>
<body>
    <a href="/" class="home-button">Home</a>
    <div class="content-section">
        <h1>{{ filename }}</h1>
        {% if is_table %}
        <div class="result-headers">
            <p>{{ header1 }}</p>
            <p>{{ header2 }}</p>
        </div>
        <table class="result-table" id="result-table">
            {% if content|length > 0 and content[0]|length is defined %}
            <!-- Multi-column table -->
            {% for row in content %}
            <tr>
                {% for value in row %}
                <td>{{ value }}</td>
                {% endfor %}
            </tr>
            {% endfor %}
            {% else %}
            <!-- Single-column table -->
            {% for value in content %}
            <tr>
                <td>{{ value }}</td>
            </tr>
            {% endfor %}
            {% endif %}
        </table>
        <button id="copy-table-btn" class="button copy-button">Copy Table</button>
        {% else %}
        <pre>{{ content }}</pre>
        {% endif %}
        <a href="javascript:history.back()" class="back-link">Back</a>
    </div>
    <script>
        console.log('Script loaded for {{ filename }}');
        const copyButton = document.getElementById('copy-table-btn');
        if (copyButton) {
            console.log('Copy button found');
            copyButton.addEventListener('click', function() {
                console.log('Copy Table button clicked');
                const table = document.getElementById('result-table');
                console.log('Table found:', table);
                let tableText = '';
                const rows = table.getElementsByTagName('tr');
                console.log('Rows found:', rows.length);
                for (let row of rows) {
                    const cells = row.getElementsByTagName('td');
                    console.log('Cells in row:', cells.length);
                    const rowValues = Array.from(cells).map(cell => cell.textContent.trim());
                    if (rowValues.length > 0) {
                        tableText += rowValues.join('\t') + '\n';
                    }
                }
                console.log('Table text to copy:', tableText.trim());
                if (tableText) {
                    if (navigator.clipboard && navigator.clipboard.writeText) {
                        console.log('Clipboard API available');
                        navigator.clipboard.writeText(tableText.trim()).then(() => {
                            console.log('Successfully copied to clipboard');
                            alert('Table copied to clipboard!');
                        }).catch(err => {
                            console.error('Clipboard API failed:', err);
                            fallbackCopy(tableText.trim());
                        });
                    } else {
                        console.warn('Clipboard API not available, using fallback');
                        fallbackCopy(tableText.trim());
                    }
                } else {
                    console.warn('No table content to copy');
                    alert('No table content to copy!');
                }
            });
        } else {
            console.error('Copy button not found');
        }

        function fallbackCopy(text) {
            const textarea = document.createElement('textarea');
            textarea.value = text;
            document.body.appendChild(textarea);
            textarea.select();
            try {
                document.execCommand('copy');
                console.log('Successfully copied to clipboard (fallback)');
                alert('Table copied to clipboard!');
            } catch (err) {
                console.error('Fallback copy failed:', err);
                alert('Failed to copy table: ' + err);
            }
            document.body.removeChild(textarea);
        }
    </script>
</body>
</html>
